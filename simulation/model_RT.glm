///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

/////////////////////////////////////////////////////////
//
// Electrification study simulation model
// Copyright (C) 2016, Stanford University
// Author: aivanova@slac.stanford.edu
//
///////////////////////////////////////////////////////

// No RT simulation
clock {
 	starttime "2021-09-22 10:00";
	stoptime "2021-09-22 12:00";
}

// For RT simulation
// #set run_realtime=1
// #define TIMEZONE=${TIMEZONE:-US/CA/Los Angeles}

///////////////////////////////////////////////////////

#define WEATHER=${WEATHER:-722540TYA.tmy3}

//#define SOLAR=on

#set randomseed=5 

module gridlabd_functions;
//module gridlabd_fcts_test;

///////////////////////////////////////////////////////
//
// WEATHER
//
///////////////////////////////////////////////////////
//#ifexist data/${WEATHER}
module climate;
object climate {
        name weather;
        tmyfile "data/${WEATHER}";
        interpolate QUADRATIC;
}
//#else
//#error WEATHER is not specified in ${CONFIGFILE}
//#endif // exist WEATHER

//#ifdef SOLAR
module generators;
//#endif // SOLAR

module powerflow{
	solver_method FBS;
}
module tape;
module residential{
	implicit_enduses REFRIGERATOR|LIGHTS|PLUGS|WATERHEATER|RANGE|DRYER|CLOTHESWASHER|FREEZER|MICROWAVE|DISHWASHER;
	implicit_enduse_source EIA2015;
}

class player {
	double value;
}

object player {
	name player_0;
	file glm_generation_Austin/players_Austin/ps_3039_2016.player;
}

object player {
	name player_1;
	file glm_generation_Austin/players_Austin/ps_93_2016.player;
}

object player {
	name player_2;
	file glm_generation_Austin/players_Austin/ps_503_2016.player;
}

object player {
	name player_3;
	file glm_generation_Austin/players_Austin/ps_86_2016.player;
}

object player {
	name player_4;
	file glm_generation_Austin/players_Austin/ps_187_2016.player;
}

object player {
	name player_5;
	file glm_generation_Austin/players_Austin/ps_1718_2016.player;
}

object meter {
	name node_149;
	nominal_voltage 24.941kV;
	phases ABCN;
	bustype SWING;
	object recorder {
		//property measured_real_power[kW], measured_reactive_power[kVAr]; 
		property measured_real_power, measured_reactive_power; 
		file results/load_node_149.csv;
		interval 1min;
	};
}

object meter {
	name feeder_node;
	nominal_voltage 24.941kV;
	phases ABCN;
}

object overhead_line {
	name main_line;
	phases ABCN;
	from feeder_node;
	to main_node;
	length 3 mile;
	configuration lc301;
}
object regulator {
	name main_reg;
	phases ABCN;
	from node_149;
	to feeder_node;
	configuration rc502;
	sense_node main_node;
}

object regulator_configuration {
	name rc502;
	connect_type WYE_WYE;
	band_center 2400.000;
	band_width 40.0;
	time_delay 30.0;
	raise_taps 16;
	lower_taps 16;
	current_transducer_ratio 50;
	power_transducer_ratio 20;
	compensator_r_setting_A 0.4;
	compensator_x_setting_A 0.4;
	CT_phase "A";
	PT_phase "A";
	regulation 0.10;
	Control OUTPUT_VOLTAGE;
	Type A;
	tap_pos_A -1;
	tap_pos_B 0;
	tap_pos_C 0;
}

//Line configurations
//ABCN
object overhead_line_conductor {
	name olc301c;	//336,400 26/7 ACSR
	geometric_mean_radius 0.0244;
	resistance 0.306;
	diameter 0.721;
}

object overhead_line_conductor {
	name olc301n;	//4/0 6/1 ACSR
	geometric_mean_radius 0.00814;
	resistance 0.592;
	diameter 0.563;
}
object line_configuration {
	name lc301;
	conductor_A olc301c;
	conductor_B olc301c;
	conductor_C olc301c;
	conductor_N olc301n;
	spacing ls500301;
}
//Line spacings
//ABCN
object line_spacing {
	name ls500301;
	distance_AB 2.5;
	distance_AC 7.0;
	distance_BC 4.5;
	distance_CN 5.0;
	distance_AN 5.65685424949;
	distance_BN 4.27200187266;
	distance_AE 28.0;
	distance_BE 28.0;
	distance_CE 28.0;
	distance_NE 24.0;
}
object meter {
	name main_node;
	nominal_voltage 24.941kV;
	phases ABCN;
}
object meter {
	name main_node_A;
	parent main_node;
	nominal_voltage 24.941kV;
	phases AN;
}
object meter {
	name main_node_B;
	parent main_node;
	nominal_voltage 24.941kV;
	phases BN;
}
object meter {
	name main_node_C;
	parent main_node;
	nominal_voltage 24.941kV;
	phases CN;
}

object transformer_configuration {
	name xfmr_config_A;
	connect_type SINGLE_PHASE_CENTER_TAPPED;
	install_type POLETOP;
	powerA_rating 1000;
	primary_voltage 24.941kV;
	secondary_voltage 120.000 V;
	impedance 0.006+0.0136j;
}
object transformer_configuration {
	name xfmr_config_B;
	connect_type SINGLE_PHASE_CENTER_TAPPED;
	install_type POLETOP;
	powerB_rating 1000;
	primary_voltage 24.941kV;
	secondary_voltage 120.000 V;
	impedance 0.006+0.0136j;
}
object transformer_configuration {
	name xfmr_config_C;
	connect_type SINGLE_PHASE_CENTER_TAPPED;
	install_type POLETOP;
	powerC_rating 1000;
	primary_voltage 24.941kV;
	secondary_voltage 120.000 V;
	impedance 0.006+0.0136j;
}
global int32 SEQ_CUSTID 0;
#set allow_reinclude=true

#include using(LOADID=1,PHASE=A,COUNT=2) "house.glm"
#include using(LOADID=1,PHASE=B,COUNT=2) "house.glm"
#include using(LOADID=1,PHASE=C,COUNT=2) "house.glm"

object group_recorder {
	name rec_meter_load_P;
	group "class=triplex_meter";
	property measured_real_power; 
	file results/meter_load_P.csv;
	interval 60;
}

object group_recorder {
	name rec_meter_load_Q;
	group "class=triplex_meter";
	property measured_reactive_power; 
	file results/meter_load_Q.csv;
	interval 60;
}

object group_recorder {
	name rec_T;
	group "class=house";
	property air_temperature;
	file results/T_all.csv;
	interval 60;
}

object group_recorder {
	name rec_T_m;
	group "class=house";
	property mass_temperature;
	file results/Tm_all.csv;
	interval 60;
}

//object group_recorder {
//	name rec_batt_soc;
//	group "class=battery";
//	property state_of_charge;
//	file results/battery_SOC.csv;
//	interval 60;
//}

// This should be saved through DB

object group_recorder {
	name rec_toal_load;
	group "class=house";
	property total_load;
	file results/total_load_all.csv;
	interval 60;
}

object group_recorder {
	name rec_hvac_load;
	group "class=house";
	property hvac_load;
	file results/hvac_load_all.csv;
	interval 60;
}

//object group_recorder {
//	name rec_pv_infeed;
//	group "class=inverter";
//	property P_Out;
//	file results/total_P_Out.csv;
//	interval 60;
//}

