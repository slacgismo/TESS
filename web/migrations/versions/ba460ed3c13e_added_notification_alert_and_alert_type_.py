"""Added notification, alert, and alert type tables

Revision ID: ba460ed3c13e
Revises: 95029616b0fd
Create Date: 2020-06-30 17:06:11.415649

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ba460ed3c13e'
down_revision = '95029616b0fd'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alert_types',
    sa.Column('alert_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('utility_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('YELLOW_ALARM_LOAD', 'RED_ALARM_LOAD', 'YELLOW_ALARM_PRICE', 'RED_ALARM_PRICE', 'PRICE_ALERT', 'IMPORT_CAPACITY', 'EXPORT_CAPACITY', 'RESOURCE_DEPLETION', 'TELECOMM_ALERT', 'PEAK_EVENT', name='alertname'), nullable=False),
    sa.Column('limit', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['utility_id'], ['utilities.utility_id'], ),
    sa.PrimaryKeyConstraint('alert_type_id'),
    sa.UniqueConstraint('utility_id', 'name', name='_utility_name_uc')
    )
    op.create_table('alerts',
    sa.Column('alert_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('alert_type_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to', sa.Enum('OPERATOR_1', 'OPERATOR_2', 'FIELD_CREW', 'AUTOMATED_SYSTEM', name='assignedtooptions'), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'PENDING', 'RESOLVED', name='status'), nullable=False),
    sa.Column('context', sa.Enum('TRANSFORMER', 'FEEDER', 'RETAIL_MARKET', 'NONE', name='contexttype'), nullable=False),
    sa.Column('context_id', sa.String(length=64), nullable=False),
    sa.Column('resolution', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['alert_type_id'], ['alert_types.alert_type_id'], ),
    sa.PrimaryKeyConstraint('alert_id')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('alert_type_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['alert_type_id'], ['alert_types.alert_type_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('notification_id'),
    sa.UniqueConstraint('alert_type_id', 'email', name='_alert_type_id_email_uc')
    )
    op.create_unique_constraint(None, 'utilities', ['name'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'utilities', type_='unique')
    op.drop_table('notifications')
    op.drop_table('alerts')
    op.drop_table('alert_types')
    # ### end Alembic commands ###
