"""pick up group and role tables

Revision ID: 3e7ea9bdacbb
Revises: 197ff498f77c
Create Date: 2020-05-26 13:49:15.551155

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '3e7ea9bdacbb'
down_revision = '197ff498f77c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'roles',
        sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name',
                  sa.Enum('MEMBER', 'OPERATOR', 'SUPERUSER', name='roletype'),
                  nullable=False), sa.PrimaryKeyConstraint('role_id'),
        sa.UniqueConstraint('name'))
    op.create_table(
        'groups',
        sa.Column('group_id', sa.Integer(), autoincrement=True,
                  nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('is_active',
                  sa.Boolean(create_constraint=False),
                  default=False,
                  nullable=False),
        sa.Column('is_archived',
                  sa.Boolean(create_constraint=False),
                  default=False,
                  nullable=False),
        sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
        sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ['role_id'],
            ['roles.role_id'],
        ), sa.ForeignKeyConstraint(
            ['user_id'],
            ['users.id'],
        ), sa.PrimaryKeyConstraint('group_id'))
    op.add_column('users', sa.Column('utility_id',
                                     sa.Integer(),
                                     nullable=False))
    op.alter_column('users',
                    'email_confirmed_at',
                    existing_type=mysql.TIMESTAMP(),
                    nullable=True)
    op.create_foreign_key(None, 'users', 'utilities', ['utility_id'],
                          ['utility_id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.alter_column('users',
                    'email_confirmed_at',
                    existing_type=mysql.TIMESTAMP(),
                    nullable=False)
    op.drop_column('users', 'utility_id')
    op.drop_table('groups')
    op.drop_table('roles')
    # ### end Alembic commands ###
