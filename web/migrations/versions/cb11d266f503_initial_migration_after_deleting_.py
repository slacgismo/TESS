"""Initial migration after deleting previous migrations

Revision ID: cb11d266f503
Revises: 
Create Date: 2020-06-23 20:57:47.353784

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cb11d266f503'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('addresses',
    sa.Column('address_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('address2', sa.String(length=64), nullable=True),
    sa.Column('district', sa.String(length=64), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=64), nullable=False),
    sa.Column('phone', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('markets',
    sa.Column('market_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('source', sa.Text(), nullable=False),
    sa.Column('ts', sa.Float(), nullable=False),
    sa.Column('p_max', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('market_id')
    )
    op.create_table('rates',
    sa.Column('rate_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('rate_id')
    )
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Enum('MEMBER', 'OPERATOR', 'SUPERUSER', name='roletype'), nullable=False),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('utilities',
    sa.Column('utility_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('subscription_start', sa.TIMESTAMP(), nullable=False),
    sa.Column('subscription_end', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('utility_id')
    )
    op.create_table('market_intervals',
    sa.Column('market_interval_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('p_exp', sa.Float(), nullable=False),
    sa.Column('p_dev', sa.Float(), nullable=False),
    sa.Column('p_clear', sa.Float(), nullable=False),
    sa.Column('q_clear', sa.Float(), nullable=False),
    sa.Column('alpha', sa.Float(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.market_id'], ),
    sa.PrimaryKeyConstraint('market_interval_id')
    )
    op.create_table('service_locations',
    sa.Column('service_location_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('alternate_service_location_id', sa.String(length=64), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('map_location', sa.String(length=64), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], ),
    sa.PrimaryKeyConstraint('service_location_id'),
    sa.UniqueConstraint('address_id'),
    sa.UniqueConstraint('alternate_service_location_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('email_confirmed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('utility_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.address_id'], ),
    sa.ForeignKeyConstraint(['utility_id'], ['utilities.utility_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('group_id', 'role_id', 'user_id'),
    sa.UniqueConstraint('role_id', 'user_id', name='_role_user_uc')
    )
    op.create_table('home_hubs',
    sa.Column('home_hub_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('service_location_id', sa.Integer(), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['market_id'], ['markets.market_id'], ),
    sa.ForeignKeyConstraint(['service_location_id'], ['service_locations.service_location_id'], ),
    sa.PrimaryKeyConstraint('home_hub_id'),
    sa.UniqueConstraint('service_location_id')
    )
    op.create_table('logins',
    sa.Column('login_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('login_id'),
    sa.UniqueConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('meters',
    sa.Column('meter_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('utility_id', sa.Integer(), nullable=False),
    sa.Column('service_location_id', sa.Integer(), nullable=False),
    sa.Column('home_hub_id', sa.Integer(), nullable=False),
    sa.Column('alternate_meter_id', sa.String(length=64), nullable=True),
    sa.Column('feeder', sa.String(length=45), nullable=False),
    sa.Column('substation', sa.String(length=45), nullable=False),
    sa.Column('meter_type', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'PRODUCTION', name='metertype'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['home_hub_id'], ['home_hubs.home_hub_id'], ),
    sa.ForeignKeyConstraint(['service_location_id'], ['service_locations.service_location_id'], ),
    sa.ForeignKeyConstraint(['utility_id'], ['utilities.utility_id'], ),
    sa.PrimaryKeyConstraint('meter_id', 'utility_id', 'service_location_id'),
    sa.UniqueConstraint('alternate_meter_id')
    )
    op.create_table('channels',
    sa.Column('channel_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meter_id', sa.Integer(), nullable=False),
    sa.Column('setting', sa.Integer(), nullable=False),
    sa.Column('channel_type', sa.Enum('R', 'F', name='channeltype'), nullable=False),
    sa.ForeignKeyConstraint(['meter_id'], ['meters.meter_id'], ),
    sa.PrimaryKeyConstraint('channel_id')
    )
    op.create_table('meter_intervals',
    sa.Column('meter_interval_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('meter_id', sa.Integer(), nullable=False),
    sa.Column('rate_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('e', sa.Float(), nullable=False),
    sa.Column('qmtp', sa.Float(), nullable=False),
    sa.Column('p_bid', sa.Float(), nullable=False),
    sa.Column('q_bid', sa.Float(), nullable=False),
    sa.Column('mode', sa.Boolean(), nullable=False),
    sa.Column('is_bid', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['meter_id'], ['meters.meter_id'], ),
    sa.ForeignKeyConstraint(['rate_id'], ['rates.rate_id'], ),
    sa.PrimaryKeyConstraint('meter_interval_id')
    )
    op.create_table('pvs',
    sa.Column('pv_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('home_hub_id', sa.Integer(), nullable=False),
    sa.Column('meter_id', sa.Integer(), nullable=False),
    sa.Column('q_rated', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['home_hub_id'], ['home_hubs.home_hub_id'], ),
    sa.ForeignKeyConstraint(['meter_id'], ['meters.meter_id'], ),
    sa.PrimaryKeyConstraint('pv_id'),
    sa.UniqueConstraint('home_hub_id'),
    sa.UniqueConstraint('meter_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pvs')
    op.drop_table('meter_intervals')
    op.drop_table('channels')
    op.drop_table('meters')
    op.drop_table('logins')
    op.drop_table('home_hubs')
    op.drop_table('groups')
    op.drop_table('users')
    op.drop_table('service_locations')
    op.drop_table('market_intervals')
    op.drop_table('utilities')
    op.drop_table('roles')
    op.drop_table('rates')
    op.drop_table('markets')
    op.drop_table('addresses')
    # ### end Alembic commands ###
